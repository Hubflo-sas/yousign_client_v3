=begin
#Public Api v3

#Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.

OpenAPI spec version: 3.0
Contact: contact@yousign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.66
=end

module YousignClientV3
  class FieldApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete a Field
    # Deletes a given Field from a Document.
    # @param signature_request_id Signature Request Id
    # @param document_id Document Id
    # @param field_id Field Id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_signature_requests_signature_request_id_documents_document_id_fields_field_id(signature_request_id, document_id, field_id, opts = {})
      delete_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts)
      nil
    end

    # Delete a Field
    # Deletes a given Field from a Document.
    # @param signature_request_id Signature Request Id
    # @param document_id Document Id
    # @param field_id Field Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}'.sub('{' + 'signatureRequestId' + '}', signature_request_id.to_s).sub('{' + 'documentId' + '}', document_id.to_s).sub('{' + 'fieldId' + '}', field_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#delete_signature_requests_signature_request_id_documents_document_id_fields_field_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Lists the Fields of a Signature Request Document.
    # Returns a list of Fields for a given Document. You can limit the number of items returned by using filters.
    # @param signature_request_id Signature Request Id
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<null>] :types Filter by Field type.
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve. (default to 100)
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response]
    def get_signature_requests_signature_request_id_documents_document_id_fields(signature_request_id, document_id, opts = {})
      data, _status_code, _headers = get_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts)
      data
    end

    # Lists the Fields of a Signature Request Document.
    # Returns a list of Fields for a given Document. You can limit the number of items returned by using filters.
    # @param signature_request_id Signature Request Id
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<null>] :types Filter by Field type.
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve.
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response data, response status code and response headers
    def get_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields'.sub('{' + 'signatureRequestId' + '}', signature_request_id.to_s).sub('{' + 'documentId' + '}', document_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'types[]'] = @api_client.build_collection_param(opts[:'types'], :multi) if !opts[:'types'].nil?
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response' 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#get_signature_requests_signature_request_id_documents_document_id_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a new Field on a Document
    # Adds a Field to a given Document.
    # @param signature_request_id Signature Request Id
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [CreateField] :body 
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner]
    def post_signature_requests_signature_request_id_documents_document_id_fields(signature_request_id, document_id, opts = {})
      data, _status_code, _headers = post_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts)
      data
    end

    # Create a new Field on a Document
    # Adds a Field to a given Document.
    # @param signature_request_id Signature Request Id
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [CreateField] :body 
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner data, response status code and response headers
    def post_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields'.sub('{' + 'signatureRequestId' + '}', signature_request_id.to_s).sub('{' + 'documentId' + '}', document_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body']) 

      return_type = opts[:return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner' 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#post_signature_requests_signature_request_id_documents_document_id_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a Field
    # Updates a given Field. Any parameters not provided are left unchanged.
    # @param signature_request_id Signature Request Id
    # @param document_id Document Id
    # @param field_id Field Id
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateField] :body 
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner]
    def update_signature_requests_signature_request_id_documents_document_id_fields_field_id(signature_request_id, document_id, field_id, opts = {})
      data, _status_code, _headers = update_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts)
      data
    end

    # Update a Field
    # Updates a given Field. Any parameters not provided are left unchanged.
    # @param signature_request_id Signature Request Id
    # @param document_id Document Id
    # @param field_id Field Id
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateField] :body 
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner data, response status code and response headers
    def update_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}'.sub('{' + 'signatureRequestId' + '}', signature_request_id.to_s).sub('{' + 'documentId' + '}', document_id.to_s).sub('{' + 'fieldId' + '}', field_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body']) 

      return_type = opts[:return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner' 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#update_signature_requests_signature_request_id_documents_document_id_fields_field_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
